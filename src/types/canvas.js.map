{"version":3,"file":"canvas.js","sourceRoot":"","sources":["canvas.ts"],"names":[],"mappings":"","sourcesContent":["/**\r\n * Like a canvas.\r\n */\r\nexport interface CanvasLike {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    getContext(...args: any): any;\r\n    // getContext(context: \"2d\"): CanvasRenderingContext2DLike | null;\r\n}\r\n\r\n/**\r\n * Like a canvas's 2d context.\r\n */\r\nexport interface CanvasRenderingContext2DLike {\r\n    createRadialGradient(\r\n        x0: number,\r\n        y0: number,\r\n        r0: number,\r\n        x1: number,\r\n        y1: number,\r\n        r1: number\r\n    ): CanvasGradientLike;\r\n    createLinearGradient(\r\n        x: number,\r\n        y: number,\r\n        w: number,\r\n        h: number\r\n    ): CanvasGradientLike;\r\n    getImageData(sx: number, sy: number, sw: number, sh: number): ImageDataLike;\r\n    putImageData(imageData: ImageDataLike, dx: number, dy: number): void;\r\n    set fillStyle(value: any);\r\n    fillRect(x: number, y: number, w: number, h: number): void;\r\n}\r\n\r\n/**\r\n * Like a 2d context's gradient object.\r\n */\r\nexport interface CanvasGradientLike {\r\n    addColorStop(offset: number, color: string): void;\r\n}\r\n\r\n/**\r\n * Like a 2d context's image data.\r\n */\r\nexport interface ImageDataLike {\r\n    data: Uint8ClampedArray;\r\n}\r\n"]}