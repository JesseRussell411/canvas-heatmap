{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import HeatmapGenerator from \"../dist_heatmap/HeatmapGenerator.js\";\r\nimport { CanvasLike } from \"../../dist/types/canvas.js\";\r\nconst rootElement = document.documentElement;\r\n\r\nfunction copyCanvas(src: CanvasLike, dst: CanvasLike) {\r\n    const imageData = src\r\n        .getContext(\"2d\")\r\n        ?.getImageData(0, 0, src.width, src.height);\r\n    if (imageData == null) throw new Error(\"couldn't get image data\");\r\n\r\n    const dstCtx = dst.getContext(\"2d\");\r\n    if (dstCtx == null) throw new Error(\"couldn't put image data\");\r\n\r\n    dstCtx.putImageData(imageData, 0, 0, 0, 0, dst.width, dst.height);\r\n}\r\n\r\nfunction getMouseCoords(\r\n    element: Element,\r\n    event: MouseEvent\r\n): [x: number, y: number, insideElement: boolean] {\r\n    const rect = element.getBoundingClientRect();\r\n\r\n    const x = event.clientX - rect.left;\r\n    const y = event.clientY - rect.top;\r\n    const insideElement = 0 <= x && x < rect.width && 0 <= y && y < rect.height;\r\n\r\n    return [x, y, insideElement];\r\n}\r\n\r\n// keep track of mouse pointer\r\nconst mouseCoords: [x: number, y: number] = [0, 0];\r\nrootElement.addEventListener(\"mousemove\", (e) => {\r\n    const coords = getMouseCoords(rootElement, e);\r\n    mouseCoords[0] = coords[0];\r\n    mouseCoords[1] = coords[1];\r\n});\r\n\r\n// create canvases and heatmaps\r\nconst heatmapCanvas = document.querySelector(\"#heatmap\");\r\nif (!(heatmapCanvas instanceof HTMLCanvasElement)) {\r\n    throw new Error(\"canvas not found\");\r\n}\r\nconst heatmap = new HeatmapGenerator(heatmapCanvas, [\"blue\", \"yellow\", \"red\"]);\r\n\r\nconst heatmapGrayscaleCanvas = new OffscreenCanvas(\r\n    heatmapCanvas.width,\r\n    heatmapCanvas.height\r\n);\r\nconst heatmapGrayscale = new HeatmapGenerator(heatmapGrayscaleCanvas);\r\n\r\n// start drawing interval\r\nconst targetFps = 30;\r\nsetInterval(() => {\r\n    const rect = heatmapCanvas.getBoundingClientRect();\r\n    const x = mouseCoords[0] - rect.left;\r\n    const y = mouseCoords[1] - rect.top;\r\n\r\n    heatmapGrayscale.drawPoint(x, y, 10, 45, 1 / targetFps);\r\n    copyCanvas(heatmapGrayscaleCanvas, heatmapCanvas);\r\n    heatmap.colorize();\r\n}, 1000 / targetFps);\r\n"]}